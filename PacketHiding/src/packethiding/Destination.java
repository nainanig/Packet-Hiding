/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package packethiding;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.io.*;
import java.math.BigInteger;
import java.net.*;
import java.util.Random;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESedeKeySpec;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.security.auth.kerberos.KerberosKey;
/**
 *
 * @author priyanka
 */
public class Destination extends javax.swing.JFrame {
public String Fien="";
private Random r;

private BigInteger p;

	private BigInteger q;

	private BigInteger N;

	private BigInteger phi;

	private BigInteger e;

	private BigInteger d;

	private int bitlength = 1024;

	private int blocksize = 256;




	public int i,j;
	public static int fillen;
	public int intfec[];
	public int intval[];
	public char chfec[];
	public char pakch1[][];
	public char filreord[][];
	public String[] filtfr;
	public String filfec[];
        public String k1,keyy;
	ServerSocket ss;
	Socket so;
	 byte tt[][],ttd[][];
	public float codrt;
	public float bklen;
	public float intdth,orgblk;
    /**
     * Creates new form Destination
     */
    public Destination() {
        initComponents();
        this.setVisible(true);
		try
		{
			ss=new ServerSocket(4500);
			while(true)
			{
				so=ss.accept();
				System.out.println("**************Packets Are Arriving From The Source*********");
                                jTextArea1.setText("\n   Public and private Key Generated");
                                jTextArea1.setText("\n   Public Key Send to Destination");
				jTextArea1.setText("\n   Packets Recieving Started");
				DataInputStream dis=new DataInputStream(so.getInputStream());
				fillen=dis.readInt();
				filtfr=new String[fillen];
				intval=new int[fillen];
				intfec=new int[fillen];
				chfec=new char[fillen+25];
				pakch1=new char[fillen+25][100];
				filreord=new char[fillen+25][100];
				filfec=new String[fillen];
                                int[] et = new int[fillen];
				jTextField1.setText("//Destination 2/Result2.txt");
                                byte[][] etb = null;
                                tt=new byte[fillen][100];
                                keyy=dis.readUTF();
			        
				System.out.println("fillen : "+fillen);
                                //System.out.println("**********Packets Recieved From The Source1111***********");
                                
				 for(i=0;i<fillen;i++)
				 {
					filtfr[i]=dis.readUTF();
                                        tt[i]=Base64.decode(filtfr[i]);
					//System.out.println("Packet : ["+i+"] = "+filtfr[i]);
                                        System.out.println("Packet : ["+i+"] = "+tt[i]);
					//Thread.sleep(25);
				 }
                                 
				System.out.println("**********Packets Recieved From The Source***********");
				
				jTextArea1.append("\n\n   Packets Received");
				System.out.println("fillen : "+fillen);
			}
		}
		catch (Exception er)
		{
			System.out.println(er);
		}
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 102, 255));

        jLabel4.setFont(new java.awt.Font("Sitka Heading", 3, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Destination");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Received File Location:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Decrypt Key");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("De-Interleaving");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Decoding");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Result");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Send Public Key");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Generate Key");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Decrypt Packets");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton5))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 255, 204));

        jLabel2.setText("Status Information");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         System.out.println("key="+keyy);
                                 byte[] key2=(new BigInteger(keyy.getBytes())).modPow(d, N).toByteArray();
                               
                                 
                              //   byte[] decodedKey = Base64.getDecoder().decode(encodedKey);
// rebuild key using SecretKeySpec
//SecretKey originalKey = new SecretKeySpec(decodedKey, 0, decodedKey.length, "AES"); 
                                 
                                 
                                 k1=key2.toString();
                                 System.out.println("key="+k1);
                                 // String ar[]=k1.split(" ");
                                //byte[] keyBytes= ar[0].getBytes();
                              // String algorithm=ar[1];
                               
                              SecretKey skey = new SecretKeySpec(key2, 0, key2.length, "DESede");
                                 System.out.println("key="+skey.toString());
        
        
        jTextArea1.append("\n\n   Key Decryption Complete");
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         System.out.println("\n***************De-Interleaving Started***************");
		
		
		jTextArea1.append("\n\n   De-Interleaving Process Started");
                
		for(i=0;i<fillen;i++)
		{
			for(j=0;j<filtfr[i].length();j++)
			{
				pakch1[i][j]=filtfr[i].charAt(j);
			}
		}
		//Printing the values
		for(i=0;i<fillen;i++)
		{
			for(j=0;j<filtfr[i].length();j++)
			{
				System.out.print(pakch1[i][j]+" ");
			}
			System.out.print("\n");
			try
				{
					Thread.sleep(2);
				}
				catch (Exception er)
				{
					System.out.println("Sleep Disturbed : "+er);
				}
		}
		
		//De-Interleaving
		for(i=0;i<fillen;i++)
		{
			for(j=0;j<1;j++)
			{
				if((filtfr[i].length())==21)
				{
				bklen=filtfr[i].length();
				filreord[i][0]=pakch1[i][8];
				filreord[i][1]=pakch1[i][10];
				filreord[i][2]=pakch1[i][18];
				filreord[i][3]=pakch1[i][15];
				filreord[i][4]=pakch1[i][9];
				filreord[i][5]=pakch1[i][0];
				filreord[i][6]=pakch1[i][4];
				filreord[i][7]=pakch1[i][13];
				filreord[i][8]=pakch1[i][6];
				filreord[i][9]=pakch1[i][3];
				filreord[i][10]=pakch1[i][5];
				filreord[i][11]=pakch1[i][2];
				filreord[i][12]=pakch1[i][1];
				filreord[i][13]=pakch1[i][12];
				filreord[i][14]=pakch1[i][20];
				filreord[i][15]=pakch1[i][17];
				filreord[i][16]=pakch1[i][14];
				filreord[i][17]=pakch1[i][16];
				filreord[i][18]=pakch1[i][19];
				filreord[i][19]=pakch1[i][11];
				filreord[i][20]=pakch1[i][7];
				}
				else if((filtfr[i].length())==18)
				{
				filreord[i][0]=pakch1[i][7];
				filreord[i][1]=pakch1[i][9];
				filreord[i][2]=pakch1[i][16];
				filreord[i][3]=pakch1[i][13];
				filreord[i][4]=pakch1[i][8];
				filreord[i][5]=pakch1[i][0];
				filreord[i][6]=pakch1[i][4];
				filreord[i][7]=pakch1[i][11];
				filreord[i][8]=pakch1[i][6];
				filreord[i][9]=pakch1[i][3];
				filreord[i][10]=pakch1[i][5];
				filreord[i][11]=pakch1[i][2];
				filreord[i][12]=pakch1[i][1];
				filreord[i][13]=pakch1[i][15];
				filreord[i][14]=pakch1[i][17];
				filreord[i][15]=pakch1[i][10];
				filreord[i][16]=pakch1[i][12];
				filreord[i][17]=pakch1[i][14];
				}
				else
				{
				filreord[i][0]=pakch1[i][7];
				filreord[i][1]=pakch1[i][9];
				filreord[i][2]=pakch1[i][5];
				filreord[i][3]=pakch1[i][10];
				filreord[i][4]=pakch1[i][8];
				filreord[i][5]=pakch1[i][0];
				filreord[i][6]=pakch1[i][4];
				filreord[i][7]=pakch1[i][11];
				filreord[i][8]=pakch1[i][6];
				filreord[i][9]=pakch1[i][3];
				filreord[i][10]=pakch1[i][2];
				filreord[i][11]=pakch1[i][1];
				//System.out.println("Packets Lost");
				}

			}
		}
		//Printing the values
		for(i=0;i<fillen;i++)
		{
			for(j=0;j<filtfr[i].length();j++)
			{
				System.out.print(filreord[i][j]+" ");
			}
			System.out.print("\n");
			try
				{
					Thread.sleep(2);
				}
				catch (Exception er)
				{
					System.out.println("Sleep Disturbed : "+er);
				}
		}
		jTextArea1.append("\n\n   De-Interleaving Process Completed");
		System.out.println("\n***************De-Interleaving Completed***************");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.out.println("\n**************Channel Decoding Stsrted********************");
		// TODO: Add any handling code here
			orgblk=7;
		//Decoding FEC
		jTextArea1.append("\n\n   Channel Decoding Process Started");
         /*       
                
         */       
             char t;int l;
    l = filtfr[0].length();
                
     for(i=0;i<fillen;i++)
		{
			
			for(j=0;j<filtfr[i].length();j++)
			{  
                System.out.print(filreord[i][j]);
                
                        }System.out.println();
                }
    
     
     
    
     
     
     
               
                
              for(i=0;i<fillen;i++)
		{
			
			for(j=0;j<filtfr[i].length();j++)
			{  
                System.out.print(filreord[i][j]);
                
                        }
                       System.out.println(); 
                }
                
		for(i=0;i<fillen;i++)
		{
			filfec[i]="";
			for(j=0;j<filtfr[i].length();j++)
			{
				
				if(filreord[i][j+2]!='\0')
				{
					filfec[i]+=""+filreord[i][j+2];
					j+=2;
				}
				else if(filreord[i][j+1]!='\0')
				{
					filfec[i]+=""+filreord[i][j+1];
					j+=2;
				}
				else if(filreord[i][j]!='\0')
				{
					filfec[i]+=""+filreord[i][j];
					j+=2;
				}
			}
		}
		
		//Printing after FEC Decoding
		for(i=0;i<fillen;i++)
		{
			
			System.out.print(filfec[i]);
			try
				{
					Thread.sleep(2);
				}
				catch (Exception er)
				{
					System.out.println("Sleep Disturbed : "+er);
				}}
		
		//Conersion of Binary Values to String
		jTextArea1.append("\n\n   Conerting Binary to String");
		for(i=0;i<fillen;i++)
		{
			intval[i]= Integer.parseInt(filfec[i],2);
			chfec[i]=(char)intval[i];
		}
		try
		{
			Fien="";
			FileOutputStream fw=new FileOutputStream("E:\\Output2.txt");
			for(i=0;i<fillen;i++)
		{
			//System.out.println("\nDecimal="+intval[i]);
			//System.out.print("\nChar = "+chfec[i]);
			Fien+=Character.toString(chfec[i]);
			fw.write(chfec[i]);
		}
		}
		catch (Exception er)
		{
			er.printStackTrace();
		}
		
		jTextArea1.append("\n\n   Recieved Packets Processing Completed");
		System.out.println("\n\n******************Channel Decoding Process Completed***********************");
		
		jTextArea1.append("\n\n   Channel Decoding  Process Completed");
		//System.out.println("\nOutput : "+Fien);
		//FileOutputStream fwtr=new FileOutputStream("F:/Hector/FEC/Destination/Result.txt");
		//fwtr.writeUTF(Fien);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        System.out.println("\njTextField1_actionPerformed(ActionEvent e) called.");
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.out.println("\nOpening Recieved File");
		// TODO: Add any handling code here
		FinalResult re=new FinalResult();
		re.show();
		re.jTextArea1.setText(" ");
		
 		re.jTextArea1.setText(Fien);
		//intdth=bklen-orgblk;
		//codrt=intdth/bklen;
		
		//re.jTextField2.setText(""+bklen);
		//re.jTextField3.setText(""+codrt);
		//re.jTextField4.setText(""+intdth);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        System.out.println("\nExit");
		System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
        
        
        
        
        
        
        
        String N1=N.toString();
        String e1=e.toString();
        
        
        
        
        
        jTextArea1.append("\n\n   Sending Key to Destination");
		System.out.println("\nSending Key Started");
		// TODO: Add any handling code here
		
                
                
                
                
                
		try
		{
				String Dest1="localhost";
				//FileInputStream fis1=new FileInputStream("QueueAddress.txt");
				//while((ch=fis1.read())!=-1)
				//Dest1+=(char)ch;
				//Dest1.trim();
                               
                                 FileOutputStream out = new FileOutputStream("encrypted.dat");
                              
                                out.close();
				Socket st=new Socket(Dest1,4505);
				DataOutputStream dos=new DataOutputStream(st.getOutputStream());
                              int t=0;
				dos.writeInt(t);
                                
				//dos.writeUTF("Dest2");	
				
                                String key="Priyanka";
				dos.writeUTF(N1);
                                dos.writeUTF(e1);
				
                                
				dos.close();
				
			
		}
		catch (Exception er)
		{
			System.out.println(er);
		}
		jTextArea1.append("\n\n   Key to Destination");
		System.out.println("\nSending Key Completed");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        r = new Random();

		p = BigInteger.probablePrime(bitlength, r);

		q = BigInteger.probablePrime(bitlength, r);

		N = p.multiply(q);

		phi = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE));

		e = BigInteger.probablePrime(bitlength/2, r);

		while (phi.gcd(e).compareTo(BigInteger.ONE) > 0 && e.compareTo(phi) < 0 ) {

			e.add(BigInteger.ONE);

		}

		d = e.modInverse(phi);
                System.out.println("Public Key-"+e.toString());
                System.out.println("Private Key"+d.toString());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
      
        
        try
    {
        
        
      //  String s1=Base64.encode(tt[0]);
             int len=filtfr[0].length();
             char tt1[][]=new char[fillen][len];
             
     //Permutation
             for(i=0;i<fillen;i++)
             {
                // String s=Base64.encode(tt[i]);
                 for(j=0;j<filtfr[i].length();j++)
                 {
                     tt1[i][j]=filtfr[i].charAt(j);
                 }
             }
             char t;
            for(i=0;i<(len-3);i++)
             {
                if(i%2!=0){
               t=tt1[0][i];    
               for(j=0;j<fillen-1;j++)
                {
                    tt1[j][i]=tt1[j+1][i];
          
                    }tt1[fillen-1][i]=t;
                }
               else
               { t=tt1[fillen-1][i];    
                 for(j=fillen-1;j>0;j--)
                 {
                      tt1[j][i]=tt1[j-1][i];
          
                     }tt1[0][i]=t;
            
        }
    }
          for(i=0;i<fillen;i++)
             {
                 String s="";
                 for(j=0;j<filtfr[i].length();j++)
                 {
                     s=s+tt1[i][j];
                 }
                 tt[i]=Base64.decode(s);
             }    
             
        
        
        
        
        
        
      byte[] encryptKey = "This is a test DESede key".getBytes();
       DESedeKeySpec spec = new DESedeKeySpec(encryptKey);
       SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(
        "DESede");
      SecretKey theKey = keyFactory.generateSecret(spec);
      
     // SecretKey kk1=new SecretKey(k1;
      Cipher cipher = Cipher.getInstance("DESede/CBC/PKCS5Padding");
      IvParameterSpec ivParameters = new IvParameterSpec(
        new byte[] { 12, 34, 56, 78, 90, 87, 65, 43 } );
      cipher.init(Cipher.DECRYPT_MODE, theKey, ivParameters);

     
      for(i=0;i<fillen;i++)
 {
     
     byte[] plaintext = cipher.doFinal(tt[i]);

      String plaintextStr = new String(plaintext);
       filtfr[i]=plaintextStr;
      System.out.println("The plaintext is:"+plaintextStr);}
      
    }
    catch (Exception exc)
    {
      exc.printStackTrace();
    }
        jTextArea1.append("\n\n   Packets Decryption Complete");
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Destination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Destination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Destination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Destination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
                new Destination();
            }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
